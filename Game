/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pokemon;

import chatmessage.AnotherMessage;
import chatmessage.Message;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author lenovo
 */
class Game extends JFrame implements Runnable, KeyListener{
    private MyJPanel panel;
    private Socket socket;
    private String[] alClients = new String[10];
    ThreadRead tr;
    private ObjectInputStream ois;
    private ObjectOutputStream ous;
    String username = null;
    String newuser = null;
    int statenewuser=0;
    int stateAwal = 0;
    Message objMsg = new Message();
    private boolean done;

    Game(Socket socket, ThreadRead tr, String Username) throws IOException{
        super();
        this.socket = socket;
        this.ois = new ObjectInputStream(this.socket.getInputStream());
        this.ous = new ObjectOutputStream(this.socket.getOutputStream());
        panel = new MyJPanel();
        this.tr = tr;
        add(panel);
        pack();
        addKeyListener(this);
        repaint();
        this.username = Username;
    }

    @Override
    public void run() {
        try {
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setVisible(true);
            setTitle("Test");
            while(!this.done){
                try {
                    Object incoming = this.ois.readObject();
                    if(incoming instanceof Message) {
                        Message msg = (Message) incoming;
                        String pesan = msg.getMessage();
                        String pengirim = msg.getSender();
                        
                        if(pesan.equals("newuser")){
                            if(pengirim.equals(this.username)){
                            } else {
                                System.out.println("masukNewUser");
                                newuser = msg.getSender();
                                statenewuser = 1;
                                System.out.println(statenewuser);
                                objMsg.setMessage("hello");
                                objMsg.setSender(this.username);
                                tr.send(objMsg);
                            }
                        }
                        if(stateAwal == 0){
                            System.out.println(pengirim);
                            if(pesan.equals("hello")){
                                if(pengirim.equals(this.username)){
                                } else {
                                    newuser = msg.getSender();
                                    statenewuser = 1;
                                    System.out.println(statenewuser);
                                }
                            }
                            if(!pesan.equals("hello")){
                                stateAwal = 1;
                            }
                        }
                    }
                    else if(incoming instanceof AnotherMessage)
                    {
                        AnotherMessage msg = (AnotherMessage) incoming;
                        objMsg.setMessage("newuser");
                        objMsg.setSender(this.username);
                        tr.send(objMsg);
                    }
                } catch (IOException|ClassNotFoundException ex) {
                    this.done = true;
                    Logger.getLogger(ThreadRead.class.getName()).log(Level.SEVERE, null, ex);
                }
                //System.out.println(tr.statenewuser);
                if(statenewuser == 1){
                    System.out.println("masukstate");
                    for(int i = 0; i < 10; i++){
                        if(alClients[i].isEmpty()){
                            System.out.println("tambahUser");
                            alClients[i]=tr.newuser;
                            System.out.println(alClients[i]);
                            panel.newUser(i);
                            break;
                        }
                    }
                    tr.statenewuser = 0;
                    repaint();
                }
            }
            System.out.println("Bye");
            this.ois.close();
            this.ous.close();
            this.socket.close();
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    @Override
    public void repaint() {
        super.repaint();
    }

    @Override
    public void keyPressed(KeyEvent e) {
        panel.keyPressed(e);
        repaint();
    }

    @Override
    public void keyTyped(KeyEvent e) { }

    @Override
    public void keyReleased(KeyEvent e) { }
     
}
